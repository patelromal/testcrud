{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/coin.service.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/index/index.component.css","webpack:///./src/app/components/index/index.component.html","webpack:///./src/app/components/index/index.component.ts","webpack:///./src/app/routerConfig.ts","webpack:///./src/app/student.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{title}}!!\\n  </h1>\\n  <nav>\\n    <a routerLink=\\\"create\\\" routerLinkActive=\\\"active\\\">Add coins</a>\\n  </nav>\\n  <router-outlet></router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n    title = 'Welcome to crypto world';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { IndexComponent } from './components/index/index.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport { RouterModule } from '@angular/router';\nimport { appRoutes } from './routerConfig';\nimport {HttpClientModule} from '@angular/common/http';\nimport { CoinService } from './coin.service';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { StudentService } from './student.service';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    IndexComponent,\n    CreateComponent,\n    EditComponent\n  ],\n  imports: [\n    BrowserModule,\n    RouterModule.forRoot(appRoutes), HttpClientModule, ReactiveFormsModule\n  ],\n  providers: [CoinService,StudentService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class CoinService {\n\n  result: any;\n  constructor(private http: HttpClient) {}\n\n  addCoin(name, price) {\n    const uri = 'http://localhost:4000/coins/add';\n    const obj = {\n      name: name,\n      price: price\n    };\n    this\n      .http\n      .post(uri, obj)\n      .subscribe(res =>\n          console.log('Done'));\n  }\n\n  getCoins() {\n    const uri = 'http://localhost:4000/coins';\n    return this\n            .http\n            .get(uri)\n            .map(res => {\n              return res;\n            });\n  }\n\n  editCoin(id) {\n    const uri = 'http://localhost:4000/coins/edit/' + id;\n    return this\n            .http\n            .get(uri)\n            .map(res => {\n              return res;\n            });\n  }\n\n  updateCoin(name, price, id) {\n    const uri = 'http://localhost:4000/coins/update/' + id;\n\n    const obj = {\n      name: name,\n      price: price\n    };\n    this\n      .http\n      .post(uri, obj)\n      .subscribe(res => console.log('Done'));\n  }\n\n  deleteCoin(id) {\n    const uri = 'http://localhost:4000/coins/delete/' + id;\n\n        return this\n            .http\n            .get(uri)\n            .map(res => {\n              return res;\n            });\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n  <div class=\\\"panel-heading\\\">\\n    {{ title }}\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">First Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"fname\\\" #fname />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['fname'].invalid && (angForm.controls['fname'].dirty || angForm.controls['fname'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['fname'].errors.required\\\">\\n          First Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Last Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"lname\\\" #lname/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['lname'].invalid && (angForm.controls['lname'].dirty || angForm.controls['lname'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['lname'].errors.required\\\">\\n          Last Name is required.\\n        </div>\\n      </div>\\n        <div class=\\\"form-group\\\">\\n          <button (click)=\\\"addStudent(fname.value, lname.value)\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"btn btn-primary\\\">Add</button>\\n        </div>\\n    </form>\\n  </div>\\n</div>\"","// create.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { CoinService } from '../../coin.service';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { StudentService } from '../../student.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  title = 'Add Student';\n  angForm: FormGroup;\n  constructor(private coinservice: CoinService, private fb: FormBuilder,private studentservice: StudentService) {\n    this.createForm();\n   }\n  createForm() {\n    this.angForm = this.fb.group({\n      fname: ['', Validators.required ],\n      lname: ['', Validators.required ]\n   });\n  }\n  addCoin(name, price) {\n      this.coinservice.addCoin(name, price);\n  }\n  addStudent(fname, lname) {\n      this.studentservice.addStudent(fname, lname);\n  }\n  ngOnInit() {\n  }\n}","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-primary\\\">\\n  <div class=\\\"panel-heading\\\">\\n    {{ title }}\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <form [formGroup]=\\\"angForm\\\" novalidate>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Coin Name</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\" #name [(ngModel)] = \\\"coin.name\\\"/>\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['name'].invalid && (angForm.controls['name'].dirty || angForm.controls['name'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['name'].errors.required\\\">\\n          Name is required.\\n        </div>\\n      </div>\\n      <div class=\\\"form-group\\\">\\n        <label class=\\\"col-md-4\\\">Coin Price</label>\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"price\\\" #price [(ngModel)] = \\\"coin.price\\\" />\\n      </div>\\n      <div *ngIf=\\\"angForm.controls['price'].invalid && (angForm.controls['price'].dirty || angForm.controls['price'].touched)\\\" class=\\\"alert alert-danger\\\">\\n        <div *ngIf=\\\"angForm.controls['price'].errors.required\\\">\\n          Price is required.\\n        </div>\\n      </div>\\n        <div class=\\\"form-group\\\">\\n          <button (click)=\\\"updateCoin(name.value, price.value)\\\" [disabled]=\\\"angForm.pristine || angForm.invalid\\\" class=\\\"btn btn-primary\\\">Update</button>\\n        </div>\\n    </form>\\n  </div>\\n</div>\"","// edit.component.ts\n\nimport { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CoinService } from './../../coin.service';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  coin: any;\n  angForm: FormGroup;\n  title = 'Edit Coin';\n  constructor(private route: ActivatedRoute, private router: Router, private service: CoinService, private fb: FormBuilder) {\n    this.createForm();\n   }\n\n  createForm() {\n    this.angForm = this.fb.group({\n      name: ['', Validators.required ],\n      price: ['', Validators.required ]\n   });\n  }\n\n  updateCoin(name, price) {\n    this.route.params.subscribe(params => {\n    this.service.updateCoin(name, price, params['id']);\n    this.router.navigate(['index']);\n  });\n}\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.coin = this.service.editCoin(params['id']).subscribe(res => {\n        this.coin = res;\n      });\n    });\n  }\n}","module.exports = \"\"","module.exports = \"<table class=\\\"table table-hover\\\">\\n  <thead>\\n  <tr>\\n      <td>First Name</td>\\n      <td>Last Name</td>\\n      <td>Course</td>\\n      <td>Email</td>\\n      <td colspan=\\\"2\\\">Actions</td>\\n  </tr>\\n  </thead>\\n\\n  <tbody>\\n      <tr *ngFor=\\\"let coin of coins\\\">\\n          <td>{{ student.fname }}</td>\\n          <td>{{ student.lname }}</td>\\n          <td>{{ student.course }}</td>\\n          <td>{{ student.email }}</td>\\n          <td><a [routerLink]=\\\"['/edit', coin._id]\\\" class=\\\"btn btn-primary\\\">Edit</a></td>\\n          <td><button (click)=\\\"deleteCoin(coin._id)\\\"  class=\\\"btn btn-danger\\\">Delete</button></td>\\n      </tr>\\n  </tbody>\\n</table>\"","import { CoinService } from './../../coin.service';\nimport { Component, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport { StudentService } from './../../student.service';\n\n@Component({\n  selector: 'app-index',\n  templateUrl: './index.component.html',\n  styleUrls: ['./index.component.css']\n})\nexport class IndexComponent implements OnInit {\n\n  coins: any;\n  students: any;\n\n  constructor(private http: HttpClient, private service: CoinService, private studentService: StudentService) {}\n\n  ngOnInit() {\n    this.getCoins();\n  }\n\n  getCoins() {\n    this.service.getCoins().subscribe(res => {\n      this.coins = res;\n    });\n  }\n  getStudents() {\n      this.studentService.getStudents().subscribe(res => {\n        this.students = res;\n    });\n  }\n}","import { Routes } from '@angular/router';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\nimport { IndexComponent } from './components/index/index.component';\n\nexport const appRoutes: Routes = [\n  { path: 'create', \n    component: CreateComponent \n  },\n  {\n    path: 'edit/:id',\n    component: EditComponent\n  },\n  { path: 'index',\n    component: IndexComponent\n  }\n];","import { Injectable } from '@angular/core';\nimport { FormGroup,  FormBuilder,  Validators } from '@angular/forms';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs/Observable';\nimport 'rxjs/add/operator/map';\n\n@Injectable()\nexport class StudentService {\n\n  result: any;\n  constructor(private http: HttpClient) {}\n\n  addStudent(fname, lname) {\n    console.log('hit....');  \n    const uri = 'http://localhost:4000/students/add';\n    const obj = {\n      fname: fname,\n      lname: lname\n    };\n    this\n      .http\n      .post(uri, obj)\n      .subscribe(res =>\n          console.log('Done'));\n  }\n\n  getStudents() {\n    const uri = 'http://localhost:4000/students';\n    return this\n            .http\n            .get(uri)\n            .map(res => {\n              return res;\n            });\n  }\n\n  editStudent(id) {\n    const uri = 'http://localhost:4000/students/edit/' + id;\n    return this\n            .http\n            .get(uri)\n            .map(res => {\n              return res;\n            });\n  }\n\n  updateStudent(name, price, id) {\n    const uri = 'http://localhost:4000/students/update/' + id;\n\n    const obj = {\n        fname: name,\n        lname: name\n    };\n    this\n      .http\n      .post(uri, obj)\n      .subscribe(res => console.log('Done'));\n  }\n\n  deleteStudent(id) {\n    const uri = 'http://localhost:4000/students/delete/' + id;\n\n        return this\n            .http\n            .get(uri)\n            .map(res => {\n              return res;\n            });\n  }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, for easier debugging, you can ignore zone related error\n * stack frames such as `zone.run`/`zoneDelegate.invokeTask` by importing the\n * below file. Don't forget to comment it out in production mode\n * because it will have a performance impact when errors are thrown\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}